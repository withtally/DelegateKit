"use client";
import Image from "next/image";
import Link from "next/link";
import { usePathname } from "next/navigation";
import { PropsWithChildren, useEffect, useState } from "react";
import { useAddress } from "../../hooks/use-address";
import { EthereumAddress } from "./EthereumAddress";
import { HamburgerMenu } from "./HamburgerMenu";
import { ProfileIcon } from "./icons/ProfileIcon";
import { ProposalIcon } from "./icons/ProposalIcon";

/**
 *  converts a hex color to rgba with an alpha value of 0.15
 */
function hexToRgbA(hex: string) {
  var c;
  if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {
    c = hex.substring(1).split("");
    if (c.length == 3) {
      c = [c[0], c[0], c[1], c[1], c[2], c[2]];
    }
    c = "0x" + c.join("");
    return (
      // @ts-ignore
      "rgba(" + [(c >> 16) & 255, (c >> 8) & 255, c & 255].join(",") + ",.15)"
    );
  }
  throw new Error("Bad Hex");
}
const HeaderElement = ({
  color,
  children,
  text,
  href,
}: { color: string; text: string; href: string } & PropsWithChildren) => {
  const pathname = usePathname();
  const rootHref = href.split("/")[1]; // works for both /polls/new and /polls/history
  const active = pathname?.includes(rootHref);
  const backgroundColor = hexToRgbA(color);
  return (
    <Link
      href={href}
      className="px-2 lg:px-8 py-2"
      style={{
        display: "flex",
        alignItems: "center",
        borderRadius: "7px",
        ...(active ? { backgroundColor } : {}),
      }}
    >
      <div className="flex">
        <div
          className="flex justify-center items-center"
          style={{
            borderRadius: "7px",
            height: "24px",
            width: "24px",
            boxShadow:
              "0px 0.205px 0.614px 0px rgba(0, 0, 0, 0.20), 0px 4px 12px 0px rgba(0, 0, 0, 0.08), 0px 2px 2px 0px rgba(0, 0, 0, 0.08)",
            marginRight: "8px",
          }}
        >
          <div
            style={{
              height: "22px",
              width: "22px",
              backgroundColor: color,
              display: "flex",
              alignItems: "center",
              justifyContent: "center",
              borderRadius: "7px",
              paddingTop: "2px",
            }}
          >
            {children}
          </div>
        </div>
        <div style={{ ...(active ? {} : { opacity: "50%" }) }}>{text}</div>
      </div>
    </Link>
  );
};
const Header = () => {
  const { address } = useAddress();
  const [mobileMenuExpanded, setMobileMenuExpanded] = useState(false);

  // on nextjs router navigation, close the mobile menu
  const pathname = usePathname();
  useEffect(() => {
    setMobileMenuExpanded(false);
  }, [pathname]);

  return (
    <>
      <nav className="bg-white shadow py-3 px-6 flex justify-between items-center">
        <Link href="/">
          <svg
            width="120"
            viewBox="0 0 166 39"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M1.57953 24V5.4858H8.77806C13.8792 5.4858 17.0123 8.80023 17.0123 14.7558C17.0123 20.7115 13.9828 24 8.85574 24H1.57953ZM4.66092 8.10109V21.3847H8.6227C12.7657 21.3847 13.931 18.3033 13.931 14.7558C13.931 11.2084 12.7657 8.10109 8.6227 8.10109H4.66092ZM24.6616 22.1615C26.9144 22.1615 27.8207 20.7633 28.0537 19.9605H30.7726C30.0993 22.4723 28.1314 24.3884 24.7393 24.3884C20.6221 24.3884 18.1104 21.5401 18.1104 17.397C18.1104 13.0986 20.6221 10.4057 24.6098 10.4057C28.8823 10.4057 30.9797 13.3835 30.9797 18.0962H20.8293C20.8293 20.3231 22.2534 22.1615 24.6616 22.1615ZM24.6098 12.5549C22.4088 12.5549 20.8293 14.0308 20.8293 16.0764H28.2609C28.2609 14.0308 26.8108 12.5549 24.6098 12.5549ZM32.5073 5.4858H35.252V24H32.5073V5.4858ZM43.3558 22.1615C45.6086 22.1615 46.5149 20.7633 46.7479 19.9605H49.4668C48.7936 22.4723 46.8256 24.3884 43.4335 24.3884C39.3164 24.3884 36.8047 21.5401 36.8047 17.397C36.8047 13.0986 39.3164 10.4057 43.304 10.4057C47.5765 10.4057 49.674 13.3835 49.674 18.0962H39.5235C39.5235 20.3231 40.9477 22.1615 43.3558 22.1615ZM43.304 12.5549C41.1031 12.5549 39.5235 14.0308 39.5235 16.0764H46.9551C46.9551 14.0308 45.505 12.5549 43.304 12.5549ZM60.3162 10.7682H63.0351V23.0937C63.0351 26.9001 60.7305 28.5832 56.9759 28.5832C53.1694 28.5832 51.072 26.5894 50.7872 24.3625H53.532C53.7909 25.5277 54.7231 26.4081 56.8723 26.4081C59.151 26.4081 60.3162 25.3724 60.3162 22.9901V21.3847H60.2644C59.5653 22.3687 58.3482 23.3527 56.2508 23.3527C52.9364 23.3527 50.4506 21.0481 50.4506 16.8792C50.4506 12.6843 52.9364 10.4057 56.2508 10.4057C58.3482 10.4057 59.5653 11.3896 60.2644 12.3218H60.3162V10.7682ZM56.7687 21.1258C58.9697 21.1258 60.2903 19.6757 60.2903 16.8792C60.2903 14.0826 58.9697 12.6325 56.7687 12.6325C54.3865 12.6325 53.1694 14.4192 53.1694 16.8792C53.1694 19.3132 54.3865 21.1258 56.7687 21.1258ZM73.2268 14.238C73.2268 13.2799 72.6571 12.5549 70.8445 12.5549C68.6694 12.5549 67.8667 13.2281 67.7372 14.9371H65.0961C65.2255 12.3995 66.8568 10.4057 70.8445 10.4057C73.7705 10.4057 75.9456 11.5191 75.9456 15.0407V21.3329C75.9456 22.2651 76.1528 22.7571 77.2144 22.6535V23.9482C76.593 24.1813 76.1528 24.233 75.6349 24.233C74.1848 24.233 73.5116 23.7152 73.2527 22.4205H73.2009C72.3723 23.5857 70.8704 24.3884 68.8248 24.3884C66.1318 24.3884 64.4746 22.8348 64.4746 20.6079C64.4746 17.7078 66.6238 16.8015 69.9382 16.1541C71.9839 15.7657 73.2268 15.5068 73.2268 14.238ZM69.4203 22.2392C71.6731 22.2392 73.2268 21.1258 73.2268 18.9766V16.9827C72.7866 17.2935 71.7249 17.6042 70.4561 17.8631C68.2033 18.3551 67.2194 19.0025 67.2194 20.3489C67.2194 21.566 67.9444 22.2392 69.4203 22.2392ZM84.4815 12.9951H81.9957V20.1677C81.9957 21.6695 82.7208 21.8508 84.4815 21.7472V23.9741C83.9378 24.1036 83.3422 24.1813 82.6172 24.1813C80.4421 24.1813 79.251 23.1973 79.251 20.4007V12.9951H77.3348V10.7682H79.251V6.59924H81.9957V10.7682H84.4815V12.9951ZM91.7948 22.1615C94.0475 22.1615 94.9538 20.7633 95.1869 19.9605H97.9058C97.2325 22.4723 95.2646 24.3884 91.8725 24.3884C87.7553 24.3884 85.2436 21.5401 85.2436 17.397C85.2436 13.0986 87.7553 10.4057 91.743 10.4057C96.0155 10.4057 98.1129 13.3835 98.1129 18.0962H87.9625C87.9625 20.3231 89.3866 22.1615 91.7948 22.1615ZM91.743 12.5549C89.542 12.5549 87.9625 14.0308 87.9625 16.0764H95.394C95.394 14.0308 93.944 12.5549 91.743 12.5549ZM99.8735 5.4858H102.955V14.6264L111.345 5.4858H115.021L107.823 13.3317L115.462 24H111.862L105.803 15.4809L102.955 18.5364V24H99.8735V5.4858ZM117.847 8.54129C117.096 8.54129 116.32 8.02341 116.32 7.09123C116.32 6.15905 117.096 5.66706 117.847 5.66706C118.65 5.66706 119.401 6.15905 119.401 7.09123C119.401 8.02341 118.65 8.54129 117.847 8.54129ZM116.501 10.7682H119.22V24H116.501V10.7682ZM127.914 12.9951H125.428V20.1677C125.428 21.6695 126.153 21.8508 127.914 21.7472V23.9741C127.37 24.1036 126.774 24.1813 126.049 24.1813C123.874 24.1813 122.683 23.1973 122.683 20.4007V12.9951H120.767V10.7682H122.683V6.59924H125.428V10.7682H127.914V12.9951Z"
              fill="black"
            />
            <path
              opacity="0.5"
              d="M89.3296 31.0782C89.3296 31.8599 88.8677 32.2241 88.3436 32.4018V32.4195C89.0098 32.535 89.5783 33.0235 89.5783 33.974C89.5783 35.1998 88.7345 35.8305 87.4198 35.8305H84.5418V29.4793H87.2688C88.5746 29.4793 89.3296 30.0567 89.3296 31.0782ZM85.5989 32.1086H87.2333C87.9883 32.1086 88.2726 31.8066 88.2726 31.247C88.2726 30.6874 87.9262 30.3765 87.2955 30.3765H85.5989V32.1086ZM85.5989 32.8992V34.9333H87.3399C88.2459 34.9333 88.5213 34.507 88.5213 33.9118C88.5213 33.2634 88.1216 32.8992 87.4554 32.8992H85.5989ZM94.2535 31.2914L92.4414 36.1147C92.1838 36.8165 91.8907 37.3761 91.0202 37.3761C90.7537 37.3761 90.5316 37.3317 90.354 37.2872V36.5766H90.4339C90.8248 36.6299 91.1179 36.6033 91.3222 36.3546C91.491 36.1503 91.6153 35.7949 91.4465 35.3686L89.8032 31.2914H90.807L92.0772 34.7646H92.095L93.2586 31.2914H94.2535Z"
              fill="black"
            />
            <g clipPath="url(#clip0_2167_4365)">
              <path
                d="M108.894 30.6529H106.923V29.3672H112.285V30.6529H110.304V36.6089H108.894V30.6529Z"
                fill="black"
              />
              <path
                d="M116.993 31.6336V36.6131H115.74V36.0109H115.716C115.365 36.4693 114.875 36.6984 114.246 36.6984C113.923 36.7013 113.603 36.6384 113.305 36.5142C113.023 36.3972 112.768 36.2215 112.558 35.9985C112.342 35.7649 112.175 35.4888 112.069 35.1871C111.832 34.5112 111.832 33.7738 112.069 33.0979C112.176 32.7946 112.34 32.5155 112.553 32.2764C112.763 32.046 113.018 31.8624 113.303 31.7371C113.586 31.6119 113.893 31.5474 114.203 31.5482C114.477 31.5387 114.75 31.5921 115.001 31.7044C115.252 31.8167 115.475 31.985 115.652 32.1966H115.672V31.6346L116.993 31.6336ZM115.372 35.1242C115.492 34.9926 115.586 34.8383 115.648 34.67C115.709 34.5014 115.737 34.3225 115.73 34.1431C115.742 33.778 115.616 33.4218 115.378 33.1473C115.269 33.0189 115.132 32.9164 114.979 32.8477C114.825 32.779 114.659 32.7454 114.491 32.7494C114.323 32.7454 114.155 32.7774 113.999 32.8434C113.844 32.9092 113.704 33.008 113.588 33.1328C113.466 33.2688 113.37 33.4284 113.309 33.602C113.247 33.7756 113.219 33.9598 113.228 34.1442C113.213 34.5051 113.339 34.8579 113.578 35.1252C113.696 35.2452 113.835 35.3406 113.989 35.4056C114.143 35.4706 114.308 35.5041 114.475 35.5041C114.641 35.5041 114.806 35.4706 114.96 35.4056C115.114 35.3406 115.253 35.2452 115.371 35.1252L115.372 35.1242Z"
                fill="black"
              />
              <path
                d="M118.145 29.1032H119.462V36.6123H118.145V29.1032Z"
                fill="black"
              />
              <path
                d="M120.711 29.1032H122.027V36.6123H120.711V29.1032Z"
                fill="black"
              />
              <mask
                id="mask0_2167_4365"
                style={{ maskType: "luminance" }}
                maskUnits="userSpaceOnUse"
                x="122"
                y="31"
                width="6"
                height="8"
              >
                <path
                  d="M122.571 31.575H127.73V38.6502H122.571V31.575Z"
                  fill="white"
                />
              </mask>
              <g mask="url(#mask0_2167_4365)">
                <path
                  d="M127.714 31.6335L125.072 38.6303H123.719L124.594 36.3052L122.632 31.6335H124.008L125.213 34.7161H125.227L126.353 31.6335H127.714Z"
                  fill="black"
                />
              </g>
              <path
                fillRule="evenodd"
                clipRule="evenodd"
                d="M103.736 33.0684V31.1697L98.3184 27.9998V27.4172L104.233 30.8775V33.3587L103.736 33.0684ZM102.34 33.9052L101.843 33.6148V37.0737L102.34 37.3641V33.9052Z"
                fill="black"
              />
              <path
                fillRule="evenodd"
                clipRule="evenodd"
                d="M104.687 32.5064V30.6077L99.2686 27.4379V26.8553L105.183 30.3155V32.7968L104.687 32.5064ZM103.282 34.444L102.794 34.1604V36.9437L103.282 37.2273V34.444Z"
                fill="black"
              />
              <path
                d="M103.286 31.4302V33.9115L101.392 32.8033V37.9168L99.2653 36.6715V31.5594L97.3711 30.4512V27.9699L103.286 31.4302Z"
                fill="black"
              />
            </g>
            <defs>
              <clipPath id="clip0_2167_4365">
                <rect
                  width="31.2641"
                  height="11.9539"
                  fill="white"
                  transform="translate(97.3711 26.8535)"
                />
              </clipPath>
            </defs>
          </svg>
        </Link>
        {address && (
          <div className="hidden md:flex items-center">
            <HeaderElement color="#7F6BFF" text="Polls" href="/polls/new">
              <Image
                src="/images/chat-bubble.svg"
                width={80}
                height={80}
                alt="chat-bubble"
              />
            </HeaderElement>
            <HeaderElement
              color="#70EEFF"
              text="Profile"
              href={`/delegates/${address}`}
            >
              <ProfileIcon />
            </HeaderElement>
            <HeaderElement color="#FF84FF" text="Proposal" href={`/proposals`}>
              <ProposalIcon />
            </HeaderElement>
          </div>
        )}
        <div className="flex justify-end">
          <HamburgerMenu expandMenu={() => setMobileMenuExpanded(true)} />
          <span className="hidden md:block">
            <EthereumAddress />
          </span>
        </div>
      </nav>
      {mobileMenuExpanded && (
        <div className="px-6 py-4 bg-white flex flex-col md:hidden">
          <Link href="/polls/new">Polls</Link>
          <Link href={`/delegates/${address}`}>Profile</Link>
          <Link href={`/proposals`}>Proposals</Link>
          <Link href={`/settings`}>Settings</Link>
        </div>
      )}
    </>
  );
};
export default Header;
